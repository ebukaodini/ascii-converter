'use strict';

// ascii map
const asciiTable = [
  { dec: "0", hex: "00", oct: "000", bin: "00000000", htmlCode: "&#0;", htmlName: undefined, char: "NUL", desc: "Null" },
  { dec: "1", hex: "01", oct: "001", bin: "00000001", htmlCode: "&#1;", htmlName: undefined, char: "SOH", desc: "Start of Heading" },
  { dec: "2", hex: "02", oct: "002", bin: "00000010", htmlCode: "&#2;", htmlName: undefined, char: "STX", desc: "Start of Text" },
  { dec: "3", hex: "03", oct: "003", bin: "00000011", htmlCode: "&#3;", htmlName: undefined, char: "ETX", desc: "End of Text" },
  { dec: "4", hex: "04", oct: "004", bin: "00000100", htmlCode: "&#4;", htmlName: undefined, char: "EOT", desc: "End of Transmission" },
  { dec: "5", hex: "05", oct: "005", bin: "00000101", htmlCode: "&#5;", htmlName: undefined, char: "ENQ", desc: "Enquiry" },
  { dec: "6", hex: "06", oct: "006", bin: "00000110", htmlCode: "&#6;", htmlName: undefined, char: "ACK", desc: "Acknowledge" },
  { dec: "7", hex: "07", oct: "007", bin: "00000111", htmlCode: "&#7;", htmlName: undefined, char: "BEL", desc: "Bell" },
  { dec: "8", hex: "08", oct: "010", bin: "00001000", htmlCode: "&#8;", htmlName: undefined, char: "BS", desc: "Backspace" },
  { dec: "9", hex: "09", oct: "011", bin: "00001001", htmlCode: "&#9;", htmlName: undefined, char: "HT", desc: "Horizontal Tab" },
  { dec: "10", hex: "0A", oct: "012", bin: "00001010", htmlCode: "&#10;", htmlName: undefined, char: "LF", desc: "NL Line Feed, New Line" },
  { dec: "11", hex: "0B", oct: "013", bin: "00001011", htmlCode: "&#11;", htmlName: undefined, char: "VT", desc: "Vertical Tab" },
  { dec: "12", hex: "0C", oct: "014", bin: "00001100", htmlCode: "&#12;", htmlName: undefined, char: "FF", desc: "NP Form Feed, New Page" },
  { dec: "13", hex: "0D", oct: "015", bin: "00001101", htmlCode: "&#13;", htmlName: undefined, char: "CR", desc: "Carriage Return" },
  { dec: "14", hex: "0E", oct: "016", bin: "00001110", htmlCode: "&#14;", htmlName: undefined, char: "SO", desc: "Shift Out" },
  { dec: "15", hex: "0F", oct: "017", bin: "00001111", htmlCode: "&#15;", htmlName: undefined, char: "SI", desc: "Shift In" },
  { dec: "16", hex: "10", oct: "020", bin: "00010000", htmlCode: "&#16;", htmlName: undefined, char: "DLE", desc: "Data Link Escape" },
  { dec: "17", hex: "11", oct: "021", bin: "00010001", htmlCode: "&#17;", htmlName: undefined, char: "DC1", desc: "Device Control 1" },
  { dec: "18", hex: "12", oct: "022", bin: "00010010", htmlCode: "&#18;", htmlName: undefined, char: "DC2", desc: "Device Control 2" },
  { dec: "19", hex: "13", oct: "023", bin: "00010011", htmlCode: "&#19;", htmlName: undefined, char: "DC3", desc: "Device Control 3" },
  { dec: "20", hex: "14", oct: "024", bin: "00010100", htmlCode: "&#20;", htmlName: undefined, char: "DC4", desc: "Device Control 4" },
  { dec: "21", hex: "15", oct: "025", bin: "00010101", htmlCode: "&#21;", htmlName: undefined, char: "NAK", desc: "Negative Acknowledge" },
  { dec: "22", hex: "16", oct: "026", bin: "00010110", htmlCode: "&#22;", htmlName: undefined, char: "SYN", desc: "Synchronous Idle" },
  { dec: "23", hex: "17", oct: "027", bin: "00010111", htmlCode: "&#23;", htmlName: undefined, char: "ETB", desc: "End of Transmission Block" },
  { dec: "24", hex: "18", oct: "030", bin: "00011000", htmlCode: "&#24;", htmlName: undefined, char: "CAN", desc: "Cancel" },
  { dec: "25", hex: "19", oct: "031", bin: "00011001", htmlCode: "&#25;", htmlName: undefined, char: "EM", desc: "End of Medium" },
  { dec: "26", hex: "1A", oct: "032", bin: "00011010", htmlCode: "&#26;", htmlName: undefined, char: "SUB", desc: "Substitute" },
  { dec: "27", hex: "1B", oct: "033", bin: "00011011", htmlCode: "&#27;", htmlName: undefined, char: "ESC", desc: "Escape" },
  { dec: "28", hex: "1C", oct: "034", bin: "00011100", htmlCode: "&#28;", htmlName: undefined, char: "FS", desc: "File Separator" },
  { dec: "29", hex: "1D", oct: "035", bin: "00011101", htmlCode: "&#29;", htmlName: undefined, char: "GS", desc: "Group Separator" },
  { dec: "30", hex: "1E", oct: "036", bin: "00011110", htmlCode: "&#30;", htmlName: undefined, char: "RS", desc: "Record Separator" },
  { dec: "31", hex: "1F", oct: "037", bin: "00011111", htmlCode: "&#31;", htmlName: undefined, char: "US", desc: "Unit Separator" },
  { dec: "32", hex: "20", oct: "040", bin: "00100000", htmlCode: "&#32;", htmlName: undefined, char: " ", desc: "Space" },
  { dec: "33", hex: "21", oct: "041", bin: "00100001", htmlCode: "&#33;", htmlName: "&excl;", char: "!", desc: "Exclamation Mark" },
  { dec: "34", hex: "22", oct: "042", bin: "00100010", htmlCode: "&#34;", htmlName: "&quot;", char: '"', desc: "Double Quote" },
  { dec: "35", hex: "23", oct: "043", bin: "00100011", htmlCode: "&#35;", htmlName: "&num;", char: "#", desc: "Hash or Number" },
  { dec: "36", hex: "24", oct: "044", bin: "00100100", htmlCode: "&#36;", htmlName: "&dollar;", char: "$", desc: "Dollar Sign" },
  { dec: "37", hex: "25", oct: "045", bin: "00100101", htmlCode: "&#37;", htmlName: "&percnt;", char: "%", desc: "Percentage" },
  { dec: "38", hex: "26", oct: "046", bin: "00100110", htmlCode: "&#38;", htmlName: "&amp;", char: "&", desc: "Ampersand" },
  { dec: "39", hex: "27", oct: "047", bin: "00100111", htmlCode: "&#39;", htmlName: "&apos;", char: "'", desc: "Single Quote" },
  { dec: "40", hex: "28", oct: "050", bin: "00101000", htmlCode: "&#40;", htmlName: "&lpar;", char: "(", desc: "Left Parenthesis" },
  { dec: "41", hex: "29", oct: "051", bin: "00101001", htmlCode: "&#41;", htmlName: "&rpar;", char: ")", desc: "Right Parenthesis" },
  { dec: "42", hex: "2A", oct: "052", bin: "00101010", htmlCode: "&#42;", htmlName: "&ast;", char: "*", desc: "Asterisk" },
  { dec: "43", hex: "2B", oct: "053", bin: "00101011", htmlCode: "&#43;", htmlName: "&plus;", char: "+", desc: "Plus Sign" },
  { dec: "44", hex: "2C", oct: "054", bin: "00101100", htmlCode: "&#44;", htmlName: "&comma;", char: ",", desc: "Comma" },
  { dec: "45", hex: "2D", oct: "055", bin: "00101101", htmlCode: "&#45;", htmlName: "&minus;", char: "-", desc: "Minus Sign" },
  { dec: "46", hex: "2E", oct: "056", bin: "00101110", htmlCode: "&#46;", htmlName: "&period;", char: ".", desc: "Period" },
  { dec: "47", hex: "2F", oct: "057", bin: "00101111", htmlCode: "&#47;", htmlName: "&sol;", char: "/", desc: "Slash" },
  { dec: "48", hex: "30", oct: "060", bin: "00110000", htmlCode: "&#48;", htmlName: undefined, char: "0", desc: "Zero" },
  { dec: "49", hex: "31", oct: "061", bin: "00110001", htmlCode: "&#49;", htmlName: undefined, char: "1", desc: "Number One" },
  { dec: "50", hex: "32", oct: "062", bin: "00110010", htmlCode: "&#50;", htmlName: undefined, char: "2", desc: "Number Two" },
  { dec: "51", hex: "33", oct: "063", bin: "00110011", htmlCode: "&#51;", htmlName: undefined, char: "3", desc: "Number Three" },
  { dec: "52", hex: "34", oct: "064", bin: "00110100", htmlCode: "&#52;", htmlName: undefined, char: "4", desc: "Number Four" },
  { dec: "53", hex: "35", oct: "065", bin: "00110101", htmlCode: "&#53;", htmlName: undefined, char: "5", desc: "Number Five" },
  { dec: "54", hex: "36", oct: "066", bin: "00110110", htmlCode: "&#54;", htmlName: undefined, char: "6", desc: "Number Six" },
  { dec: "55", hex: "37", oct: "067", bin: "00110111", htmlCode: "&#55;", htmlName: undefined, char: "7", desc: "Number Seven" },
  { dec: "56", hex: "38", oct: "070", bin: "00111000", htmlCode: "&#56;", htmlName: undefined, char: "8", desc: "Number Eight" },
  { dec: "57", hex: "39", oct: "071", bin: "00111001", htmlCode: "&#57;", htmlName: undefined, char: "9", desc: "Number Nine" },
  { dec: "58", hex: "3A", oct: "072", bin: "00111010", htmlCode: "&#58;", htmlName: "&colon;", char: ":", desc: "Colon" },
  { dec: "59", hex: "3B", oct: "073", bin: "00111011", htmlCode: "&#59;", htmlName: "&semi;", char: ";", desc: "Semicolon" },
  { dec: "60", hex: "3C", oct: "074", bin: "00111100", htmlCode: "&#60;", htmlName: "&lt;", char: "<", desc: "Less Than" },
  { dec: "61", hex: "3D", oct: "075", bin: "00111101", htmlCode: "&#61;", htmlName: "&equals;", char: "=", desc: "Equals Sign" },
  { dec: "62", hex: "3E", oct: "076", bin: "00111110", htmlCode: "&#62;", htmlName: "&gt;", char: ">", desc: "Greater Than" },
  { dec: "63", hex: "3F", oct: "077", bin: "00111111", htmlCode: "&#63;", htmlName: "&quest;", char: "?", desc: "Question Mark" },
  { dec: "64", hex: "40", oct: "100", bin: "01000000", htmlCode: "&#64;", htmlName: "&commat;", char: "@", desc: "At Sign" },
  { dec: "65", hex: "41", oct: "101", bin: "01000001", htmlCode: "&#65;", htmlName: undefined, char: "A", desc: "Upper Case Letter A" },
  { dec: "66", hex: "42", oct: "102", bin: "01000010", htmlCode: "&#66;", htmlName: undefined, char: "B", desc: "Upper Case Letter B" },
  { dec: "67", hex: "43", oct: "103", bin: "01000011", htmlCode: "&#67;", htmlName: undefined, char: "C", desc: "Upper Case Letter C" },
  { dec: "68", hex: "44", oct: "104", bin: "01000100", htmlCode: "&#68;", htmlName: undefined, char: "D", desc: "Upper Case Letter D" },
  { dec: "69", hex: "45", oct: "105", bin: "01000101", htmlCode: "&#69;", htmlName: undefined, char: "E", desc: "Upper Case Letter E" },
  { dec: "70", hex: "46", oct: "106", bin: "01000110", htmlCode: "&#70;", htmlName: undefined, char: "F", desc: "Upper Case Letter F" },
  { dec: "71", hex: "47", oct: "107", bin: "01000111", htmlCode: "&#71;", htmlName: undefined, char: "G", desc: "Upper Case Letter G" },
  { dec: "72", hex: "48", oct: "110", bin: "01001000", htmlCode: "&#72;", htmlName: undefined, char: "H", desc: "Upper Case Letter H" },
  { dec: "73", hex: "49", oct: "111", bin: "01001001", htmlCode: "&#73;", htmlName: undefined, char: "I", desc: "Upper Case Letter I" },
  { dec: "74", hex: "4A", oct: "112", bin: "01001010", htmlCode: "&#74;", htmlName: undefined, char: "J", desc: "Upper Case Letter J" },
  { dec: "75", hex: "4B", oct: "113", bin: "01001011", htmlCode: "&#75;", htmlName: undefined, char: "K", desc: "Upper Case Letter K" },
  { dec: "76", hex: "4C", oct: "114", bin: "01001100", htmlCode: "&#76;", htmlName: undefined, char: "L", desc: "Upper Case Letter L" },
  { dec: "77", hex: "4D", oct: "115", bin: "01001101", htmlCode: "&#77;", htmlName: undefined, char: "M", desc: "Upper Case Letter M" },
  { dec: "78", hex: "4E", oct: "116", bin: "01001110", htmlCode: "&#78;", htmlName: undefined, char: "N", desc: "Upper Case Letter N" },
  { dec: "79", hex: "4F", oct: "117", bin: "01001111", htmlCode: "&#79;", htmlName: undefined, char: "O", desc: "Upper Case Letter O" },
  { dec: "80", hex: "50", oct: "120", bin: "01010000", htmlCode: "&#80;", htmlName: undefined, char: "P", desc: "Upper Case Letter P" },
  { dec: "81", hex: "51", oct: "121", bin: "01010001", htmlCode: "&#81;", htmlName: undefined, char: "Q", desc: "Upper Case Letter Q" },
  { dec: "82", hex: "52", oct: "122", bin: "01010010", htmlCode: "&#82;", htmlName: undefined, char: "R", desc: "Upper Case Letter R" },
  { dec: "83", hex: "53", oct: "123", bin: "01010011", htmlCode: "&#83;", htmlName: undefined, char: "S", desc: "Upper Case Letter S" },
  { dec: "84", hex: "54", oct: "124", bin: "01010100", htmlCode: "&#84;", htmlName: undefined, char: "T", desc: "Upper Case Letter T" },
  { dec: "85", hex: "55", oct: "125", bin: "01010101", htmlCode: "&#85;", htmlName: undefined, char: "U", desc: "Upper Case Letter U" },
  { dec: "86", hex: "56", oct: "126", bin: "01010110", htmlCode: "&#86;", htmlName: undefined, char: "V", desc: "Upper Case Letter V" },
  { dec: "87", hex: "57", oct: "127", bin: "01010111", htmlCode: "&#87;", htmlName: undefined, char: "W", desc: "Upper Case Letter W" },
  { dec: "88", hex: "58", oct: "130", bin: "01011000", htmlCode: "&#88;", htmlName: undefined, char: "X", desc: "Upper Case Letter X" },
  { dec: "89", hex: "59", oct: "131", bin: "01011001", htmlCode: "&#89;", htmlName: undefined, char: "Y", desc: "Upper Case Letter Y" },
  { dec: "90", hex: "5A", oct: "132", bin: "01011010", htmlCode: "&#90;", htmlName: undefined, char: "Z", desc: "Upper Case Letter Z" },
  { dec: "91", hex: "5B", oct: "133", bin: "01011011", htmlCode: "&#91;", htmlName: "&lsqb;", char: "[", desc: "Left Square Bracket" },
  { dec: "92", hex: "5C", oct: "134", bin: "01011100", htmlCode: "&#92;", htmlName: "&bsol;", char: "\\", desc: "Backslash" },
  { dec: "93", hex: "5D", oct: "135", bin: "01011101", htmlCode: "&#93;", htmlName: "&rsqb;", char: "]", desc: "Right Square Bracket" },
  { dec: "94", hex: "5E", oct: "136", bin: "01011110", htmlCode: "&#94;", htmlName: "&hat;", char: "^", desc: "Caret or Circumflex" },
  { dec: "95", hex: "5F", oct: "137", bin: "01011111", htmlCode: "&#95;", htmlName: "&lowbar;", char: "_", desc: "Underscore" },
  { dec: "96", hex: "60", oct: "140", bin: "01100000", htmlCode: "&#96;", htmlName: "&grave;", char: "`", desc: "Grave Accent" },
  { dec: "97", hex: "61", oct: "141", bin: "01100001", htmlCode: "&#97;", htmlName: undefined, char: "a", desc: "Lower Case Letter a" },
  { dec: "98", hex: "62", oct: "142", bin: "01100010", htmlCode: "&#98;", htmlName: undefined, char: "b", desc: "Lower Case Letter b" },
  { dec: "99", hex: "63", oct: "143", bin: "01100011", htmlCode: "&#99;", htmlName: undefined, char: "c", desc: "Lower Case Letter c" },
  { dec: "100", hex: "64", oct: "144", bin: "01100100", htmlCode: "&#100;", htmlName: undefined, char: "d", desc: "Lower Case Letter d" },
  { dec: "101", hex: "65", oct: "145", bin: "01100101", htmlCode: "&#101;", htmlName: undefined, char: "e", desc: "Lower Case Letter e" },
  { dec: "102", hex: "66", oct: "146", bin: "01100110", htmlCode: "&#102;", htmlName: undefined, char: "f", desc: "Lower Case Letter f" },
  { dec: "103", hex: "67", oct: "147", bin: "01100111", htmlCode: "&#103;", htmlName: undefined, char: "g", desc: "Lower Case Letter g" },
  { dec: "104", hex: "68", oct: "150", bin: "01101000", htmlCode: "&#104;", htmlName: undefined, char: "h", desc: "Lower Case Letter h" },
  { dec: "105", hex: "69", oct: "151", bin: "01101001", htmlCode: "&#105;", htmlName: undefined, char: "i", desc: "Lower Case Letter i" },
  { dec: "106", hex: "6A", oct: "152", bin: "01101010", htmlCode: "&#106;", htmlName: undefined, char: "j", desc: "Lower Case Letter j" },
  { dec: "107", hex: "6B", oct: "153", bin: "01101011", htmlCode: "&#107;", htmlName: undefined, char: "k", desc: "Lower Case Letter k" },
  { dec: "108", hex: "6C", oct: "154", bin: "01101100", htmlCode: "&#108;", htmlName: undefined, char: "l", desc: "Lower Case Letter l" },
  { dec: "109", hex: "6D", oct: "155", bin: "01101101", htmlCode: "&#109;", htmlName: undefined, char: "m", desc: "Lower Case Letter m" },
  { dec: "110", hex: "6E", oct: "156", bin: "01101110", htmlCode: "&#110;", htmlName: undefined, char: "n", desc: "Lower Case Letter n" },
  { dec: "111", hex: "6F", oct: "157", bin: "01101111", htmlCode: "&#111;", htmlName: undefined, char: "o", desc: "Lower Case Letter o" },
  { dec: '112', hex: '70', oct: '160', bin: '01110000', htmlCode: '&#112;', htmlName: undefined, char: 'p', desc: 'Lower Case Letter p' },
  { dec: "113", hex: "71", oct: "161", bin: "01110001", htmlCode: "&#113;", htmlName: undefined, char: "q", desc: "Lower Case Letter q" },
  { dec: "114", hex: "72", oct: "162", bin: "01110010", htmlCode: "&#114;", htmlName: undefined, char: "r", desc: "Lower Case Letter r" },
  { dec: "115", hex: "73", oct: "163", bin: "01110011", htmlCode: "&#115;", htmlName: undefined, char: "s", desc: "Lower Case Letter s" },
  { dec: "116", hex: "74", oct: "164", bin: "01110100", htmlCode: "&#116;", htmlName: undefined, char: "t", desc: "Lower Case Letter t" },
  { dec: "117", hex: "75", oct: "165", bin: "01110101", htmlCode: "&#117;", htmlName: undefined, char: "u", desc: "Lower Case Letter u" },
  { dec: "118", hex: "76", oct: "166", bin: "01110110", htmlCode: "&#118;", htmlName: undefined, char: "v", desc: "Lower Case Letter v" },
  { dec: "119", hex: "77", oct: "167", bin: "01110111", htmlCode: "&#119;", htmlName: undefined, char: "w", desc: "Lower Case Letter w" },
  { dec: "120", hex: "78", oct: "170", bin: "01111000", htmlCode: "&#120;", htmlName: undefined, char: "x", desc: "Lower Case Letter x" },
  { dec: "121", hex: "79", oct: "171", bin: "01111001", htmlCode: "&#121;", htmlName: undefined, char: "y", desc: "Lower Case Letter y" },
  { dec: "122", hex: "7A", oct: "172", bin: "01111010", htmlCode: "&#122;", htmlName: undefined, char: "z", desc: "Lower Case Letter z" },
  { dec: "123", hex: "7B", oct: "173", bin: "01111011", htmlCode: "&#123;", htmlName: "&lcub;", char: "{", desc: "Left Curly Bracket" },
  { dec: "124", hex: "7C", oct: "174", bin: "01111100", htmlCode: "&#124;", htmlName: "&verbar;", char: "|", desc: "Vertical Bar" },
  { dec: "125", hex: "7D", oct: "175", bin: "01111101", htmlCode: "&#125;", htmlName: "&rcub;", char: "}", desc: "Right Curly Bracket" },
  { dec: "126", hex: "7E", oct: "176", bin: "01111110", htmlCode: "&#126;", htmlName: "&tilde;", char: "~", desc: "Tilde" },
  { dec: "127", hex: "7F", oct: "177", bin: "01111111", htmlCode: "&#127;", htmlName: undefined, char: "DEL", desc: "Delete" },
]

// finds and returns the record whose value matches the search key 
export function dec(character) { return asciiTable.find(char => char.dec === character) ?? undefined }
export function hex(character) { return asciiTable.find(char => char.hex === character) ?? undefined }
export function oct(character) { return asciiTable.find(char => char.oct === character) ?? undefined }
export function bin(character) { return asciiTable.find(char => char.bin === character) ?? undefined }
export function htmlCode(character) { return asciiTable.find(char => char.htmlCode === character) ?? undefined }
export function htmlName(character) { return asciiTable.find(char => char.htmlName === character) ?? undefined }
export function char(character) { return asciiTable.find(char => char.char === character) ?? undefined }
